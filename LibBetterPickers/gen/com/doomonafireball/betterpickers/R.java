/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.doomonafireball.betterpickers;

public final class R {
    public static final class array {
        /** 
        Country codes
        The order should match the entries in backup_country_names
        ALWAYS ADD NEW ENTRIES AT THE END. Othewise the entries after the insertion point will
        not match for languages that didn't get the translations.
    
         */
        public static int backup_country_codes=0x7f04000a;
        /** 
        Display strings for country names. Used only if framework doesn't have translated
        country names. The order should match the entries in backup_country_codes
        ALWAYS ADD NEW ENTRIES AT THE END. Othewise the array will not be the same size until
        all the translations are available. [CHAR LIMIT=32]
    
         */
        public static int backup_country_names=0x7f04000b;
        /**  Recurrence picker: How events are to be repeated.  [CHAR LIMIT = 20] 
         */
        public static int recurrence_freq=0x7f040000;
        /**  Repeat a monthly event on the same nth day of every Friday. [CHAR LIMIT=30] 
         */
        public static int repeat_by_nth_fri=0x7f040006;
        /**  Repeat a monthly event on the same nth day of every Monday. [CHAR LIMIT=30] 
         */
        public static int repeat_by_nth_mon=0x7f040002;
        /**  Repeat a monthly event on the same nth day of every Saturday. [CHAR LIMIT=30] 
         */
        public static int repeat_by_nth_sat=0x7f040007;
        /**  The following sets of strings describe a monthly recurring event, which will repeat
         on the Nth WEEKDAY of every month. For example, the 3rd Monday of every month, or
         the last Sunday. These are set up like this to resolve any gender-matching issues
         that were present in some languages.
     
 Repeat a monthly event on the same nth day of every Sunday. [CHAR LIMIT=30] 
         */
        public static int repeat_by_nth_sun=0x7f040001;
        /**  Repeat a monthly event on the same nth day of every Thursday. [CHAR LIMIT=30] 
         */
        public static int repeat_by_nth_thurs=0x7f040005;
        /**  Repeat a monthly event on the same nth day of every Tuesday. [CHAR LIMIT=30] 
         */
        public static int repeat_by_nth_tues=0x7f040003;
        /**  Repeat a monthly event on the same nth day of every Wednesday. [CHAR LIMIT=30] 
         */
        public static int repeat_by_nth_wed=0x7f040004;
        /** 
        Timezone IDs for the time zones that we want to override the display strings.
        ALWAYS ADD NEW ENTRIES AT THE END. Othewise the entries after the insertion point will
        not match for languages that didn't get the translations.
    
         */
        public static int timezone_rename_ids=0x7f040008;
        /** 
        Replacement display strings for time zones. The order should match the entries in
        timezone_rename_ids
        ALWAYS ADD NEW ENTRIES AT THE END. Othewise the array will not be the same size until
        all the translations are available. [CHAR LIMIT=32]
    
         */
        public static int timezone_rename_labels=0x7f040009;
    }
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int bpButtonBackground=0x7f010005;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int bpCheckIcon=0x7f010003;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int bpDeleteIcon=0x7f010002;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int bpDialogBackground=0x7f010009;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int bpDividerColor=0x7f010007;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int bpKeyBackground=0x7f010004;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int bpKeyboardIndicatorColor=0x7f010008;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int bpTextColor=0x7f010000;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int bpTitleColor=0x7f010001;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int bpTitleDividerColor=0x7f010006;
        /**  Minimum width for the switch component 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int switchMinWidth=0x7f010010;
        /**  Minimum space between the switch and caption text 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int switchPadding=0x7f010011;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int switchPreferenceStyle=0x7f010013;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int switchStyle=0x7f010012;
        /**  TextAppearance style for text displayed on the switch thumb. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int switchTextAppearance=0x7f01000f;
        /**  Text to use when the switch is in the unchecked/"off" state. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int textOff=0x7f01000d;
        /**  Text to use when the switch is in the checked/"on" state. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int textOn=0x7f01000c;
        /**  Drawable to use as the "thumb" that switches back and forth. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int thumb=0x7f01000a;
        /**  Amount of padding on either side of text within the switch thumb. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int thumbTextPadding=0x7f01000e;
        /**  Drawable to use as the "track" that the switch thumb slides within. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int track=0x7f01000b;
    }
    public static final class color {
        public static int ampm_text_color=0x7f050010;
        public static int blue=0x7f050015;
        public static int calendar_header=0x7f050018;
        public static int calendar_selected_date_text=0x7f05001a;
        public static int circle_background=0x7f05000e;
        public static int darker_blue=0x7f050016;
        public static int date_picker_selector=0x7f05001d;
        public static int date_picker_text_normal=0x7f050017;
        public static int date_picker_view_animator=0x7f050019;
        public static int date_picker_year_selector=0x7f05001e;
        public static int default_button_background_dark=0x7f050004;
        public static int default_button_background_light=0x7f05000a;
        public static int default_button_background_pressed_dark=0x7f050005;
        public static int default_button_background_pressed_light=0x7f05000b;
        public static int default_divider_color_dark=0x7f050003;
        public static int default_divider_color_light=0x7f050009;
        public static int default_keyboard_indicator_color_dark=0x7f050006;
        public static int default_keyboard_indicator_color_light=0x7f05000c;
        public static int default_text_color_holo_dark=0x7f050001;
        public static int default_text_color_holo_dark_disabled=0x7f050002;
        public static int default_text_color_holo_light=0x7f050007;
        public static int default_text_color_holo_light_disabled=0x7f050008;
        public static int dialog_text_color_holo_dark=0x7f05001f;
        public static int dialog_text_color_holo_light=0x7f050020;
        public static int done_text_color=0x7f050021;
        public static int done_text_color_disabled=0x7f050012;
        public static int done_text_color_normal=0x7f050011;
        public static int line_background=0x7f05000f;
        public static int numbers_text_color=0x7f050013;
        public static int recurrence_bubble_text_color=0x7f050022;
        public static int recurrence_bubble_text_normal=0x7f05001c;
        public static int recurrence_picker_background=0x7f05001b;
        public static int recurrence_spinner_text_color=0x7f050023;
        public static int transparent=0x7f050000;
        public static int transparent_black=0x7f050014;
        public static int white=0x7f05000d;
    }
    public static final class dimen {
        public static int ampm_label_size=0x7f060011;
        public static int ampm_left_padding=0x7f060013;
        public static int body_font_padding=0x7f060007;
        /**  From AOSP 
         */
        public static int date_picker_component_width=0x7f06001a;
        /**  From AOSP 
         */
        public static int date_picker_header_height=0x7f06001b;
        public static int date_picker_header_text_size=0x7f060026;
        public static int date_picker_view_animator_height=0x7f06001d;
        public static int date_viewpager_height=0x7f06000e;
        public static int day_number_select_circle_radius=0x7f060021;
        public static int day_number_size=0x7f060028;
        public static int dialog_button_font_size=0x7f06000b;
        /**  From AOSP 
         */
        public static int dialog_height=0x7f06002d;
        public static int dialpad_font_size=0x7f060008;
        public static int dialpad_font_size_ampm=0x7f06000a;
        public static int done_button_height=0x7f06001e;
        public static int done_label_size=0x7f060012;
        public static int extra_time_label_margin=0x7f060010;
        public static int footer_height=0x7f060016;
        public static int header_height=0x7f060015;
        public static int label_font_size=0x7f060006;
        public static int left_side_width=0x7f06002e;
        public static int medium_date_font_size=0x7f060004;
        public static int medium_expiration_font_size=0x7f060005;
        public static int medium_font_padding=0x7f060000;
        public static int medium_font_size=0x7f060001;
        public static int medium_font_size_header=0x7f060003;
        public static int medium_font_size_hms=0x7f060002;
        public static int minimum_margin_sides=0x7f060017;
        public static int minimum_margin_top_bottom=0x7f060018;
        public static int month_day_label_text_size=0x7f060020;
        public static int month_label_size=0x7f060027;
        public static int month_list_item_header_height=0x7f06001f;
        public static int month_list_item_padding=0x7f06002f;
        public static int month_list_item_size=0x7f060030;
        public static int month_select_circle_radius=0x7f060022;
        public static int picker_dimen=0x7f060019;
        public static int recurrence_picker_height=0x7f06002b;
        public static int recurrence_picker_width=0x7f06002c;
        /**  From AOSP 
         */
        public static int selected_calendar_layout_height=0x7f06001c;
        public static int selected_date_day_size=0x7f060024;
        public static int selected_date_month_size=0x7f060025;
        public static int selected_date_year_size=0x7f060023;
        public static int separator_padding=0x7f060014;
        public static int tablet_dialpad_font_size=0x7f06000c;
        public static int tablet_dialpad_font_size_ampm=0x7f06000d;
        public static int time_label_right_padding=0x7f060031;
        public static int time_label_size=0x7f06000f;
        public static int timer_padding_left=0x7f060009;
        public static int year_label_height=0x7f060029;
        public static int year_label_text_size=0x7f06002a;
    }
    public static final class drawable {
        public static int button_background_dark=0x7f020000;
        public static int button_background_light=0x7f020001;
        public static int dialog_full_holo_dark=0x7f020002;
        public static int dialog_full_holo_light=0x7f020003;
        public static int edit_text_holo_light=0x7f020004;
        public static int ic_backspace_dark=0x7f020005;
        public static int ic_backspace_disabled_dark=0x7f020006;
        public static int ic_backspace_disabled_light=0x7f020007;
        public static int ic_backspace_light=0x7f020008;
        public static int ic_backspace_normal_dark=0x7f020009;
        public static int ic_backspace_normal_light=0x7f02000a;
        public static int ic_check_dark=0x7f02000b;
        public static int ic_check_dark_disabled=0x7f02000c;
        public static int ic_check_light=0x7f02000d;
        public static int ic_check_light_disabled=0x7f02000e;
        public static int ic_check_normal_dark=0x7f02000f;
        public static int ic_check_normal_light=0x7f020010;
        public static int ic_clear_search_holo_light=0x7f020011;
        public static int ic_recurrence_bubble_disabled=0x7f020012;
        public static int ic_recurrence_bubble_fill=0x7f020013;
        public static int ic_recurrence_bubble_outline=0x7f020014;
        public static int ic_recurrence_bubble_outline_disabled=0x7f020015;
        public static int ic_search_holo_light=0x7f020016;
        public static int item_background_holo_light=0x7f020017;
        public static int key_background_dark=0x7f020018;
        public static int key_background_light=0x7f020019;
        public static int list_focused_holo=0x7f02001a;
        public static int list_longpressed_holo_light=0x7f02001b;
        public static int list_pressed_holo_light=0x7f02001c;
        public static int list_selector_background_transition_holo_light=0x7f02001d;
        public static int list_selector_disabled_holo_light=0x7f02001e;
        public static int recurrence_bubble_fill=0x7f02001f;
        public static int spinner_background_holo_light=0x7f020020;
        public static int spinner_default_holo_light=0x7f020021;
        public static int spinner_disabled_holo_light=0x7f020022;
        public static int spinner_focused_holo_light=0x7f020023;
        public static int spinner_pressed_holo_light=0x7f020024;
        public static int switch_bg_disabled_holo_light=0x7f020025;
        public static int switch_bg_focused_holo_light=0x7f020026;
        public static int switch_bg_holo_light=0x7f020027;
        public static int switch_thumb=0x7f020028;
        public static int switch_thumb_activated_holo_light=0x7f020029;
        public static int switch_thumb_disabled_holo_light=0x7f02002a;
        public static int switch_thumb_holo_light_v2=0x7f02002b;
        public static int switch_thumb_pressed_holo_light=0x7f02002c;
        public static int switch_track_holo_light=0x7f02002d;
        public static int textfield_activated_holo_light=0x7f02002e;
        public static int textfield_default_holo_light=0x7f02002f;
        public static int textfield_disabled_focused_holo_light=0x7f020030;
        public static int textfield_disabled_holo_light=0x7f020031;
        public static int textfield_focused_holo_light=0x7f020032;
    }
    public static final class id {
        public static int ampm_hitspace=0x7f08003b;
        public static int ampm_label=0x7f08003c;
        public static int animator=0x7f08000a;
        public static int cancel_button=0x7f08000e;
        public static int center_view=0x7f080035;
        public static int clear_search=0x7f08005d;
        public static int date=0x7f080013;
        public static int date_keyboard=0x7f080001;
        public static int date_month_int=0x7f080002;
        public static int date_picker=0x7f08000c;
        public static int date_picker_day=0x7f080008;
        public static int date_picker_header=0x7f080004;
        public static int date_picker_month=0x7f080007;
        public static int date_picker_month_and_day=0x7f080006;
        public static int date_picker_year=0x7f080009;
        public static int date_text=0x7f080011;
        public static int day_picker_selected_date_layout=0x7f080005;
        public static int decimal=0x7f080031;
        public static int decimal_separator=0x7f080030;
        public static int delete=0x7f080015;
        public static int divider=0x7f080016;
        public static int divider_1=0x7f08000d;
        public static int divider_2=0x7f08000f;
        public static int done=0x7f080003;
        public static int done_button=0x7f08003f;
        public static int empty_item=0x7f080019;
        public static int endCount=0x7f08004e;
        public static int endDate=0x7f080050;
        public static int endGroup=0x7f08004c;
        public static int endSpinner=0x7f08004d;
        public static int error=0x7f080034;
        public static int expiration_picker=0x7f08001a;
        public static int expiration_seperator=0x7f08001b;
        public static int first=0x7f080026;
        public static int fourth=0x7f080029;
        public static int freqSpinner=0x7f080040;
        public static int header=0x7f08002a;
        public static int hms_picker=0x7f08001c;
        public static int hms_text=0x7f08001d;
        public static int horizontal_scroll_view=0x7f08002d;
        public static int hour_space=0x7f080036;
        public static int hours=0x7f080038;
        public static int hours_label=0x7f08001f;
        public static int hours_ones=0x7f08001e;
        public static int hours_seperator=0x7f080057;
        public static int hours_tens=0x7f080056;
        public static int interval=0x7f080045;
        public static int intervalGroup=0x7f080043;
        public static int intervalPostText=0x7f080046;
        public static int intervalPreText=0x7f080044;
        public static int key_left=0x7f080052;
        public static int key_middle=0x7f080053;
        public static int key_right=0x7f080054;
        public static int keyboard_indicator=0x7f080017;
        public static int keyboard_pager=0x7f080018;
        public static int label=0x7f080032;
        public static int location=0x7f08005b;
        public static int minus_label=0x7f080033;
        public static int minutes=0x7f08003a;
        public static int minutes_label=0x7f080022;
        public static int minutes_ones=0x7f080021;
        public static int minutes_space=0x7f080039;
        public static int minutes_tens=0x7f080020;
        public static int month=0x7f080012;
        public static int monthGroup=0x7f080049;
        public static int month_text_view=0x7f08000b;
        public static int number=0x7f08002f;
        public static int number_picker=0x7f08002b;
        public static int number_text=0x7f08002e;
        public static int number_view_container=0x7f08002c;
        public static int numbers_key=0x7f080000;
        public static int options=0x7f080042;
        public static int postEndCount=0x7f08004f;
        public static int repeatMonthlyByNthDayOfMonth=0x7f08004a;
        public static int repeatMonthlyByNthDayOfTheWeek=0x7f08004b;
        public static int repeat_switch=0x7f080041;
        public static int searchBox=0x7f08005c;
        public static int second=0x7f080027;
        public static int seconds_label=0x7f080025;
        public static int seconds_ones=0x7f080024;
        public static int seconds_tens=0x7f080023;
        public static int separator=0x7f080037;
        public static int set_button=0x7f080010;
        public static int spinner_item=0x7f080051;
        public static int third=0x7f080028;
        public static int time_offset=0x7f08005a;
        public static int time_picker=0x7f08003e;
        public static int time_picker_dialog=0x7f08003d;
        public static int time_zone=0x7f080059;
        public static int timer_time_text=0x7f080055;
        public static int timezonelist=0x7f08005e;
        public static int value=0x7f080058;
        public static int weekGroup=0x7f080047;
        public static int weekGroup2=0x7f080048;
        public static int year_label=0x7f080014;
    }
    public static final class layout {
        public static int calendar_date_picker_dialog=0x7f030000;
        public static int calendar_date_picker_done_button=0x7f030001;
        public static int calendar_date_picker_header_view=0x7f030002;
        public static int calendar_date_picker_selected_date=0x7f030003;
        public static int calendar_date_picker_view_animator=0x7f030004;
        public static int calendar_year_label_text_view=0x7f030005;
        public static int date_picker_dialog=0x7f030006;
        public static int date_picker_view=0x7f030007;
        public static int empty_time_zone_item=0x7f030008;
        public static int expiration_picker_dialog=0x7f030009;
        public static int expiration_picker_view=0x7f03000a;
        public static int hms_picker_dialog=0x7f03000b;
        public static int hms_picker_view=0x7f03000c;
        public static int keyboard=0x7f03000d;
        public static int keyboard_right_drawable=0x7f03000e;
        public static int keyboard_right_drawable_with_header=0x7f03000f;
        public static int keyboard_text=0x7f030010;
        public static int keyboard_text_with_header=0x7f030011;
        public static int keyboard_with_header=0x7f030012;
        public static int number_picker_dialog=0x7f030013;
        public static int number_picker_view=0x7f030014;
        public static int radial_time_header_label=0x7f030015;
        public static int radial_time_picker_dialog=0x7f030016;
        public static int recurrencepicker=0x7f030017;
        public static int recurrencepicker_end_text=0x7f030018;
        public static int recurrencepicker_freq_item=0x7f030019;
        public static int three_keys_view=0x7f03001a;
        public static int three_keys_view_leftright=0x7f03001b;
        public static int three_keys_view_right_drawable=0x7f03001c;
        public static int three_keys_view_text=0x7f03001d;
        public static int time_picker_dialog=0x7f03001e;
        public static int time_picker_view=0x7f03001f;
        public static int time_zone_filter_item=0x7f030020;
        public static int time_zone_item=0x7f030021;
        public static int timezonepickerview=0x7f030022;
    }
    public static final class plurals {
        /**  A description for an event that repeats daily. For example, Every 2 days [CHAR LIMIT=15]
         */
        public static int daily=0x7f090006;
        /**  Part of a description of an repeating event. This part how many times the event repeats.
         The part before the semi-colon describes how it repeats.
         e.g. Every 2 weeks; for 15 times [CHAR LIMIT=15] 
         */
        public static int endByCount=0x7f090005;
        /**  Specifies that a repeating event should repeat for a certain number of iterations. [CHAR LIMIT=20]
         */
        public static int recurrence_end_count=0x7f090004;
        /**  Strings to describe how frequently to repeat an event (e.g. every 5 days) 
         */
        public static int recurrence_interval_daily=0x7f090000;
        /**  Strings to describe how frequently to repeat an event (e.g. every 5 months) 
         */
        public static int recurrence_interval_monthly=0x7f090002;
        /**  Strings to describe how frequently to repeat an event (e.g. every 5 weeks) 
         */
        public static int recurrence_interval_weekly=0x7f090001;
        /**  Strings to describe how frequently to repeat an event (e.g. every 5 years) 
         */
        public static int recurrence_interval_yearly=0x7f090003;
        /**  A description for an event that repeats weekly on some day of the week. For example,
         'Weekly on Tuesday' or Every 2 weeks on Monday, Tuesday.  [CHAR LIMIT=25]
         */
        public static int weekly=0x7f090007;
    }
    public static final class string {
        /**  Description of the selected marker for accessibility support [CHAR LIMIT = NONE]
         */
        public static int acessibility_recurrence_choose_end_date_description=0x7f070036;
        public static int ampm_circle_radius_multiplier=0x7f070003;
        /**  From AOSP 
         */
        public static int circle_radius_multiplier=0x7f070000;
        public static int circle_radius_multiplier_24HourMode=0x7f070001;
        public static int day_c=0x7f070020;
        /**  DO NOT TRANSLATE 
 DO NOT TRANSLATE 
         */
        public static int day_of_week_label_typeface=0x7f070034;
        /** 
        Content description for the month and day selector in the date picker, which displays
        a selectable grid of days laid out by month.
        [CHAR LIMIT=50]
     

        Content description for the month and day selector in the date picker, which displays
        a selectable grid of days laid out by month.
        [CHAR LIMIT=50]
     
         */
        public static int day_picker_description=0x7f07002a;
        /**  Accessibility announcement when a number that had been typed in is deleted [CHAR_LIMIT=NONE] 
 Accessibility announcement when a number that had been typed in is deleted [CHAR_LIMIT=NONE] 
         */
        public static int deleted_key=0x7f07002f;
        /**  From AOSP 
 Label for button to confirm chosen date or time [CHAR LIMIT=30] 
 From AOSP 
 Label for button to confirm chosen date or time [CHAR LIMIT=30] 
         */
        public static int done_label=0x7f070025;
        /**  Part of a description of an repeating event. This part states the date when a repeating
         event ends. The part before the semi-colon describes how it repeats.
         e.g. Every 2 weeks; until 1/1/2030 [CHAR LIMIT=21] 
         */
        public static int endByDate=0x7f07003c;
        /**  A label in a multiple-choice list for the specifying that an event
         repeats every weekday (Monday through Friday) 
         */
        public static int every_weekday=0x7f07003d;
        public static int expiration_picker_seperator=0x7f07001e;
        /**  Hint text to encourage the user to enter a country name to find a time zone
     [CHAR LIMIT=25] 
         */
        public static int hint_time_zone_search=0x7f070042;
        public static int hms_picker_hours_label=0x7f07001b;
        public static int hms_picker_minutes_label=0x7f07001c;
        public static int hms_picker_seconds_label=0x7f07001d;
        /** 
         Content description for the hour selector in the time picker, which displays
         selectable hours of the day along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    

         Content description for the hour selector in the time picker, which displays
         selectable hours of the day along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    
         */
        public static int hour_picker_description=0x7f070026;
        public static int hours_label=0x7f07000c;
        public static int hours_label_description=0x7f07000f;
        /**  Accessibility description for the item that is currently selected. 
 Accessibility description for the item that is currently selected. 
         */
        public static int item_is_selected=0x7f07002e;
        public static int max_error=0x7f070023;
        /**  1.3.1 
 1.3.1 
         */
        public static int min_error=0x7f070022;
        public static int min_max_error=0x7f070024;
        /** 
         Content description for the minute selector in the time picker, which displays
         selectable five-minute intervals along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    

         Content description for the minute selector in the time picker, which displays
         selectable five-minute intervals along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    
         */
        public static int minute_picker_description=0x7f070027;
        public static int minutes_label=0x7f07000d;
        public static int minutes_label_description=0x7f070010;
        public static int month_c=0x7f07001f;
        /**  The common portion of a string describing how often an event repeats,
         example: 'Monthly (on day 2)' 
         */
        public static int monthly=0x7f07003e;
        /**  Item to show when no timezones are found. [CHAR LIMIT=NONE]
         */
        public static int no_results_found=0x7f070044;
        public static int number_delete=0x7f070019;
        public static int number_picker_minus_label=0x7f070017;
        public static int number_picker_plus_minus=0x7f07001a;
        public static int number_picker_seperator=0x7f070018;
        public static int numbers_radius_multiplier_inner=0x7f070005;
        public static int numbers_radius_multiplier_normal=0x7f070004;
        public static int numbers_radius_multiplier_outer=0x7f070006;
        /**  Name to be displayed for "Palestine". This will be used when searching for a country to
         select a timezone. [CHAR LIMIT=NONE]
         *NOTE*: Please be sure to translate this as "Palestine", specifically instead of
                 "Palestinian Territories". This is for use following Google's updated policy on
                 this matter.
                  
         */
        public static int palestine_display_name=0x7f070045;
        public static int picker_cancel=0x7f07000a;
        public static int picker_set=0x7f07000b;
        /**  DO NOT TRANSLATE 
 DO NOT TRANSLATE 
         */
        public static int radial_numbers_typeface=0x7f070032;
        /**  Specifies that a repeating event to repeat forever (based on the defined frequency) instead of ending at a future date[CHAR LIMIT=20] 
         */
        public static int recurrence_end_continously=0x7f070038;
        /**  Specifies that a repeating event to repeat for a number of times. A repeating event can repeat forever, repeat in a certain frequency until a certain date, or repeat for a number of times. e.g. repeat 10 times and stop. This string is for the last case [CHAR LIMIT=25] 
         */
        public static int recurrence_end_count_label=0x7f07003b;
        /**  Specifies that a repeating event to repeat until a certain date[CHAR LIMIT=20] 
         */
        public static int recurrence_end_date=0x7f07003a;
        /**  Specifies that a repeating event to repeat until a certain date[CHAR LIMIT=25] 
         */
        public static int recurrence_end_date_label=0x7f070039;
        /**  Repeat an monthly event on the same day of every month [CHAR LIMIT=20] 
         */
        public static int recurrence_month_pattern_by_day=0x7f070035;
        /**  DO NOT TRANSLATE 
 DO NOT TRANSLATE 
         */
        public static int sans_serif=0x7f070033;
        /**  The button label for saving an event 
         */
        public static int save_label=0x7f070037;
        /**  Description of clear icon in the search bar, for accessibility. [CHAR LIMIT=NONE]
         */
        public static int searchview_description_clear=0x7f070043;
        public static int seconds_label=0x7f07000e;
        public static int seconds_label_description=0x7f070011;
        /**  Accessibility announcement for the day picker [CHAR LIMIT=NONE] 
 Accessibility announcement for the day picker [CHAR LIMIT=NONE] 
         */
        public static int select_day=0x7f07002c;
        /**  Accessibility announcement for hour circular picker [CHAR LIMIT=NONE] 
 Accessibility announcement for hour circular picker [CHAR LIMIT=NONE] 
         */
        public static int select_hours=0x7f070028;
        /**  Accessibility announcement for minute circular picker [CHAR LIMIT=NONE] 
 Accessibility announcement for minute circular picker [CHAR LIMIT=NONE] 
         */
        public static int select_minutes=0x7f070029;
        /**  Accessibility announcement for the year picker [CHAR LIMIT=NONE] 
 Accessibility announcement for the year picker [CHAR LIMIT=NONE] 
         */
        public static int select_year=0x7f07002d;
        public static int selection_radius_multiplier=0x7f070002;
        public static int switch_off=0x7f070041;
        public static int switch_on=0x7f070040;
        public static int text_size_multiplier_inner=0x7f070008;
        public static int text_size_multiplier_normal=0x7f070007;
        public static int text_size_multiplier_outer=0x7f070009;
        public static int time_picker_00_label=0x7f070015;
        public static int time_picker_30_label=0x7f070016;
        public static int time_picker_ampm_label=0x7f070013;
        public static int time_picker_time_seperator=0x7f070014;
        /**  DO NOT TRANSLATE 
 DO NOT TRANSLATE 
         */
        public static int time_placeholder=0x7f070030;
        /**  DO NOT TRANSLATE 
 DO NOT TRANSLATE 
         */
        public static int time_separator=0x7f070031;
        public static int timer_delete=0x7f070012;
        public static int year_c=0x7f070021;
        /** 
        Content description for the year selector in the date picker, which displays
        a scrolling, vertical list of years.
        [CHAR LIMIT=50]
     

        Content description for the year selector in the date picker, which displays
        a scrolling, vertical list of years.
        [CHAR LIMIT=50]
     
         */
        public static int year_picker_description=0x7f07002b;
        /**  Calendar spinner item, to select that an event recurs every year. 
         */
        public static int yearly_plain=0x7f07003f;
    }
    public static final class style {
        public static int BetterPickersDialogFragment=0x7f0a0017;
        public static int BetterPickersDialogFragment_Light=0x7f0a0018;
        public static int RecurrenceDayOfWeekStyle=0x7f0a0014;
        public static int TextAppearance_EditEvent_Spinner=0x7f0a0015;
        public static int TextAppearance_EditEvent_SpinnerButton=0x7f0a0016;
        public static int TextAppearance_Holo_Light_Widget_Switch=0x7f0a0012;
        public static int TextAppearance_RecurrencePickerStyle=0x7f0a0013;
        public static int Widget_Holo_Light_CompoundButton_Switch=0x7f0a0011;
        public static int aosp_ampm_label=0x7f0a000f;
        public static int aosp_day_of_week_label_condensed=0x7f0a0010;
        public static int aosp_time_label=0x7f0a000e;
        public static int dialog_button=0x7f0a000b;
        public static int dialpad=0x7f0a0009;
        public static int dialpad_text=0x7f0a000a;
        public static int label=0x7f0a0008;
        public static int medium_bold=0x7f0a0000;
        public static int medium_bold_date=0x7f0a0005;
        public static int medium_bold_hms=0x7f0a0001;
        public static int medium_light=0x7f0a0002;
        public static int medium_light_date=0x7f0a0006;
        public static int medium_light_expiration=0x7f0a0007;
        public static int medium_light_header=0x7f0a0003;
        public static int medium_light_hms=0x7f0a0004;
        public static int tablet_dialpad=0x7f0a000c;
        public static int tablet_dialpad_text=0x7f0a000d;
    }
    public static final class styleable {
        /** Attributes that can be used with a Android.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Android_android_textColor android:textColor}</code></td><td> Text color.</td></tr>
           <tr><td><code>{@link #Android_android_textColorHighlight android:textColorHighlight}</code></td><td> Color of the text selection highlight.</td></tr>
           <tr><td><code>{@link #Android_android_textColorHint android:textColorHint}</code></td><td> Color of the hint text.</td></tr>
           <tr><td><code>{@link #Android_android_textColorLink android:textColorLink}</code></td><td> Color of the links.</td></tr>
           <tr><td><code>{@link #Android_android_textSize android:textSize}</code></td><td> Size of the text.</td></tr>
           <tr><td><code>{@link #Android_android_textStyle android:textStyle}</code></td><td> Style (bold, italic, bolditalic) for the text.</td></tr>
           <tr><td><code>{@link #Android_android_typeface android:typeface}</code></td><td> Typeface (normal, sans, serif, monospace) for the text.</td></tr>
           </table>
           @see #Android_android_textColor
           @see #Android_android_textColorHighlight
           @see #Android_android_textColorHint
           @see #Android_android_textColorLink
           @see #Android_android_textSize
           @see #Android_android_textStyle
           @see #Android_android_typeface
         */
        public static final int[] Android = {
            0x01010095, 0x01010096, 0x01010097, 0x01010098,
            0x01010099, 0x0101009a, 0x0101009b
        };
        /**
          <p>
          @attr description
           Text color. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textColor}.
          @attr name android:textColor
        */
        public static final int Android_android_textColor = 3;
        /**
          <p>
          @attr description
           Color of the text selection highlight. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textColorHighlight}.
          @attr name android:textColorHighlight
        */
        public static final int Android_android_textColorHighlight = 4;
        /**
          <p>
          @attr description
           Color of the hint text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textColorHint}.
          @attr name android:textColorHint
        */
        public static final int Android_android_textColorHint = 5;
        /**
          <p>
          @attr description
           Color of the links. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textColorLink}.
          @attr name android:textColorLink
        */
        public static final int Android_android_textColorLink = 6;
        /**
          <p>
          @attr description
           Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textSize}.
          @attr name android:textSize
        */
        public static final int Android_android_textSize = 0;
        /**
          <p>
          @attr description
           Style (bold, italic, bolditalic) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#textStyle}.
          @attr name android:textStyle
        */
        public static final int Android_android_textStyle = 2;
        /**
          <p>
          @attr description
           Typeface (normal, sans, serif, monospace) for the text. 
          <p>This corresponds to the global attribute
          resource symbol {@link android.R.attr#typeface}.
          @attr name android:typeface
        */
        public static final int Android_android_typeface = 1;
        /** Attributes that can be used with a BetterPickersDialogFragment.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpButtonBackground com.doomonafireball.betterpickers:bpButtonBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpCheckIcon com.doomonafireball.betterpickers:bpCheckIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpDeleteIcon com.doomonafireball.betterpickers:bpDeleteIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpDialogBackground com.doomonafireball.betterpickers:bpDialogBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpDividerColor com.doomonafireball.betterpickers:bpDividerColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpKeyBackground com.doomonafireball.betterpickers:bpKeyBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpKeyboardIndicatorColor com.doomonafireball.betterpickers:bpKeyboardIndicatorColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpTextColor com.doomonafireball.betterpickers:bpTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpTitleColor com.doomonafireball.betterpickers:bpTitleColor}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersDialogFragment_bpTitleDividerColor com.doomonafireball.betterpickers:bpTitleDividerColor}</code></td><td></td></tr>
           </table>
           @see #BetterPickersDialogFragment_bpButtonBackground
           @see #BetterPickersDialogFragment_bpCheckIcon
           @see #BetterPickersDialogFragment_bpDeleteIcon
           @see #BetterPickersDialogFragment_bpDialogBackground
           @see #BetterPickersDialogFragment_bpDividerColor
           @see #BetterPickersDialogFragment_bpKeyBackground
           @see #BetterPickersDialogFragment_bpKeyboardIndicatorColor
           @see #BetterPickersDialogFragment_bpTextColor
           @see #BetterPickersDialogFragment_bpTitleColor
           @see #BetterPickersDialogFragment_bpTitleDividerColor
         */
        public static final int[] BetterPickersDialogFragment = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004, 0x7f010005, 0x7f010006, 0x7f010007,
            0x7f010008, 0x7f010009
        };
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpButtonBackground}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:bpButtonBackground
        */
        public static final int BetterPickersDialogFragment_bpButtonBackground = 5;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpCheckIcon}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:bpCheckIcon
        */
        public static final int BetterPickersDialogFragment_bpCheckIcon = 3;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpDeleteIcon}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:bpDeleteIcon
        */
        public static final int BetterPickersDialogFragment_bpDeleteIcon = 2;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpDialogBackground}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:bpDialogBackground
        */
        public static final int BetterPickersDialogFragment_bpDialogBackground = 9;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpDividerColor}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.doomonafireball.betterpickers:bpDividerColor
        */
        public static final int BetterPickersDialogFragment_bpDividerColor = 7;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpKeyBackground}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:bpKeyBackground
        */
        public static final int BetterPickersDialogFragment_bpKeyBackground = 4;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpKeyboardIndicatorColor}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.doomonafireball.betterpickers:bpKeyboardIndicatorColor
        */
        public static final int BetterPickersDialogFragment_bpKeyboardIndicatorColor = 8;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpTextColor}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:bpTextColor
        */
        public static final int BetterPickersDialogFragment_bpTextColor = 0;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpTitleColor}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:bpTitleColor
        */
        public static final int BetterPickersDialogFragment_bpTitleColor = 1;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#bpTitleDividerColor}
          attribute's value can be found in the {@link #BetterPickersDialogFragment} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.doomonafireball.betterpickers:bpTitleDividerColor
        */
        public static final int BetterPickersDialogFragment_bpTitleDividerColor = 6;
        /** Attributes that can be used with a BetterPickersSwitchTheme.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #BetterPickersSwitchTheme_switchPreferenceStyle com.doomonafireball.betterpickers:switchPreferenceStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #BetterPickersSwitchTheme_switchStyle com.doomonafireball.betterpickers:switchStyle}</code></td><td></td></tr>
           </table>
           @see #BetterPickersSwitchTheme_switchPreferenceStyle
           @see #BetterPickersSwitchTheme_switchStyle
         */
        public static final int[] BetterPickersSwitchTheme = {
            0x7f010012, 0x7f010013
        };
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#switchPreferenceStyle}
          attribute's value can be found in the {@link #BetterPickersSwitchTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:switchPreferenceStyle
        */
        public static final int BetterPickersSwitchTheme_switchPreferenceStyle = 1;
        /**
          <p>This symbol is the offset where the {@link com.doomonafireball.betterpickers.R.attr#switchStyle}
          attribute's value can be found in the {@link #BetterPickersSwitchTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.doomonafireball.betterpickers:switchStyle
        */
        public static final int BetterPickersSwitchTheme_switchStyle = 0;
        /** Attributes that can be used with a Switch.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Switch_switchMinWidth com.doomonafireball.betterpickers:switchMinWidth}</code></td><td> Minimum width for the switch component </td></tr>
           <tr><td><code>{@link #Switch_switchPadding com.doomonafireball.betterpickers:switchPadding}</code></td><td> Minimum space between the switch and caption text </td></tr>
           <tr><td><code>{@link #Switch_switchTextAppearance com.doomonafireball.betterpickers:switchTextAppearance}</code></td><td> TextAppearance style for text displayed on the switch thumb.</td></tr>
           <tr><td><code>{@link #Switch_textOff com.doomonafireball.betterpickers:textOff}</code></td><td> Text to use when the switch is in the unchecked/"off" state.</td></tr>
           <tr><td><code>{@link #Switch_textOn com.doomonafireball.betterpickers:textOn}</code></td><td> Text to use when the switch is in the checked/"on" state.</td></tr>
           <tr><td><code>{@link #Switch_thumb com.doomonafireball.betterpickers:thumb}</code></td><td> Drawable to use as the "thumb" that switches back and forth.</td></tr>
           <tr><td><code>{@link #Switch_thumbTextPadding com.doomonafireball.betterpickers:thumbTextPadding}</code></td><td> Amount of padding on either side of text within the switch thumb.</td></tr>
           <tr><td><code>{@link #Switch_track com.doomonafireball.betterpickers:track}</code></td><td> Drawable to use as the "track" that the switch thumb slides within.</td></tr>
           </table>
           @see #Switch_switchMinWidth
           @see #Switch_switchPadding
           @see #Switch_switchTextAppearance
           @see #Switch_textOff
           @see #Switch_textOn
           @see #Switch_thumb
           @see #Switch_thumbTextPadding
           @see #Switch_track
         */
        public static final int[] Switch = {
            0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011
        };
        /**
          <p>
          @attr description
           Minimum width for the switch component 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.doomonafireball.betterpickers:switchMinWidth
        */
        public static final int Switch_switchMinWidth = 6;
        /**
          <p>
          @attr description
           Minimum space between the switch and caption text 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.doomonafireball.betterpickers:switchPadding
        */
        public static final int Switch_switchPadding = 7;
        /**
          <p>
          @attr description
           TextAppearance style for text displayed on the switch thumb. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.doomonafireball.betterpickers:switchTextAppearance
        */
        public static final int Switch_switchTextAppearance = 5;
        /**
          <p>
          @attr description
           Text to use when the switch is in the unchecked/"off" state. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.doomonafireball.betterpickers:textOff
        */
        public static final int Switch_textOff = 3;
        /**
          <p>
          @attr description
           Text to use when the switch is in the checked/"on" state. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.doomonafireball.betterpickers:textOn
        */
        public static final int Switch_textOn = 2;
        /**
          <p>
          @attr description
           Drawable to use as the "thumb" that switches back and forth. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.doomonafireball.betterpickers:thumb
        */
        public static final int Switch_thumb = 0;
        /**
          <p>
          @attr description
           Amount of padding on either side of text within the switch thumb. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.doomonafireball.betterpickers:thumbTextPadding
        */
        public static final int Switch_thumbTextPadding = 4;
        /**
          <p>
          @attr description
           Drawable to use as the "track" that the switch thumb slides within. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.doomonafireball.betterpickers:track
        */
        public static final int Switch_track = 1;
    };
}
